{"ast":null,"code":"var _jsxFileName = \"/home/eamrhein/event_tool/event_tool/src/EventTool.js\";\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\"; //styled components\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 90vh;\n  background-color: cornflowerblue;\n  display: flex;\n`;\nconst Header = styled.div`\n  width: 100vw;\n  height: 10vh;\n  background-color: cornflowerblue;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\nconst TitleBar = styled.h2`\n  font-size: 40pt;\n  color: white;\n  font-weight: bolder;\n`;\nconst Main = styled.div`\n  margin: 20px;\n  width: 100%;\n  background-color: white;\n`;\nconst SideBar = styled.div`\n  width: 40%;\n  background-color: cornflowerblue;\n  display: flex;\n  align-items: stretch;\n`;\nconst EventPanel = styled.div`\n  margin: 20px;\n  background-color: lightgrey;\n  width: 100%;\n  border-radius: 5px;\n  padding: 8px;\n`;\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\n\nconst selectEvent = e => {\n  console.log(e);\n};\n\nasync function fetchUser(token) {\n  let promise = await fetch(`https://www.eventbriteapi.com/v3/users/me/`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await promise.json();\n}\n\nasync function fetchOrgs(id, token) {\n  let promise = await fetch(`https://www.eventbriteapi.com/v3/users/${id}/organizations/?token=${token}`);\n  return await promise.json();\n}\n\nfunction EventTool() {\n  let {\n    hash\n  } = useLocation();\n  let [events, setEvents] = useState([]);\n  let token = hash.split(\"=\")[2];\n  useEffect(() => {\n    async function apiCalls(key) {\n      let userData = await fetchUser(key);\n      let orgData = await fetchOrgs(userData.id, key);\n      let orgIds = orgData.organizations.map(org => org.id);\n\n      async function fetchEvents(orgIds, token) {\n        let urls = orgIds.map(id => fetch(`https://www.eventbriteapi.com/v3/organizations/${id}/events/?token=${token}&status=live`));\n        Promise.all(urls).then(promises => {\n          Promise.all(promises.map(res => res.json())).then(data => {\n            let eventsArray = [];\n            data.forEach(array => {\n              eventsArray = eventsArray.concat(array.events);\n              eventsArray = eventsArray.map(event => {\n                return { ...event,\n                  title: event.name.text,\n                  start: new Date(event.start.local),\n                  end: new Date(event.end.local)\n                };\n              });\n            });\n            setEvents(eventsArray);\n          });\n        });\n      }\n\n      fetchEvents(orgIds, key);\n    }\n\n    apiCalls(token);\n  }, []);\n  console.log(events);\n  return React.createElement(React.Fragment, null, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(TitleBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Event Tool\")), React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(Main, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Calendar, {\n    localizer: localizer,\n    defaultDate: new Date(),\n    showMultiDayTimes: true,\n    step: 60,\n    views: allViews,\n    defaultView: \"month\",\n    events: events,\n    onSelectEvent: selectEvent,\n    style: {\n      borderRadius: \"5px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(SideBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(EventPanel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"test\"))));\n}\n\nexport default EventTool;","map":{"version":3,"sources":["/home/eamrhein/event_tool/event_tool/src/EventTool.js"],"names":["React","useState","useEffect","styled","Calendar","Views","momentLocalizer","moment","useLocation","Container","div","Header","TitleBar","h2","Main","SideBar","EventPanel","allViews","Object","keys","map","k","localizer","selectEvent","e","console","log","fetchUser","token","promise","fetch","headers","Authorization","json","fetchOrgs","id","EventTool","hash","events","setEvents","split","apiCalls","key","userData","orgData","orgIds","organizations","org","fetchEvents","urls","Promise","all","then","promises","res","data","eventsArray","forEach","array","concat","event","title","name","text","start","Date","local","end","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Calendar, Views, momentLocalizer } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport { useLocation } from \"react-router-dom\";\n//styled components\nconst Container = styled.div`\n  width: 100vw;\n  height: 90vh;\n  background-color: cornflowerblue;\n  display: flex;\n`;\nconst Header = styled.div`\n  width: 100vw;\n  height: 10vh;\n  background-color: cornflowerblue;\n  display: flex;\n  align-items: flex-end;\n  justify-content: center;\n`;\nconst TitleBar = styled.h2`\n  font-size: 40pt;\n  color: white;\n  font-weight: bolder;\n`;\nconst Main = styled.div`\n  margin: 20px;\n  width: 100%;\n  background-color: white;\n`;\nconst SideBar = styled.div`\n  width: 40%;\n  background-color: cornflowerblue;\n  display: flex;\n  align-items: stretch;\n`;\nconst EventPanel = styled.div`\n  margin: 20px;\n  background-color: lightgrey;\n  width: 100%;\n  border-radius: 5px;\n  padding: 8px;\n`;\nlet allViews = Object.keys(Views).map(k => Views[k]);\nconst localizer = momentLocalizer(moment);\nconst selectEvent = e => {\n  console.log(e);\n};\nasync function fetchUser(token) {\n  let promise = await fetch(`https://www.eventbriteapi.com/v3/users/me/`, {\n    headers: { Authorization: `Bearer ${token}` }\n  });\n  return await promise.json();\n}\nasync function fetchOrgs(id, token) {\n  let promise = await fetch(\n    `https://www.eventbriteapi.com/v3/users/${id}/organizations/?token=${token}`\n  );\n  return await promise.json();\n}\n\nfunction EventTool() {\n  let { hash } = useLocation();\n  let [events, setEvents] = useState([]);\n  let token = hash.split(\"=\")[2];\n  useEffect(() => {\n    async function apiCalls(key) {\n      let userData = await fetchUser(key);\n      let orgData = await fetchOrgs(userData.id, key);\n      let orgIds = orgData.organizations.map(org => org.id);\n      async function fetchEvents(orgIds, token) {\n        let urls = orgIds.map(id =>\n          fetch(\n            `https://www.eventbriteapi.com/v3/organizations/${id}/events/?token=${token}&status=live`\n          )\n        );\n        Promise.all(urls).then(promises => {\n          Promise.all(promises.map(res => res.json())).then(data => {\n            let eventsArray = [];\n            data.forEach(array => {\n              eventsArray = eventsArray.concat(array.events);\n              eventsArray = eventsArray.map(event => {\n                return {\n                  ...event,\n                  title: event.name.text,\n                  start: new Date(event.start.local),\n                  end: new Date(event.end.local)\n                };\n              });\n            });\n            setEvents(eventsArray);\n          });\n        });\n      }\n      fetchEvents(orgIds, key);\n    }\n    apiCalls(token);\n  }, []);\n  console.log(events);\n  return (\n    <>\n      <Header>\n        <TitleBar>Event Tool</TitleBar>\n      </Header>\n      <Container>\n        <Main>\n          <Calendar\n            localizer={localizer}\n            defaultDate={new Date()}\n            showMultiDayTimes\n            step={60}\n            views={allViews}\n            defaultView=\"month\"\n            events={events}\n            onSelectEvent={selectEvent}\n            style={{ borderRadius: \"5px\" }}\n          />\n        </Main>\n        <SideBar>\n          <EventPanel>test</EventPanel>\n        </SideBar>\n      </Container>\n    </>\n  );\n}\n\nexport default EventTool;\n"]},"metadata":{},"sourceType":"module"}